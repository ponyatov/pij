%{
#include "hpp.hpp"

int item=0;
int R=0,Rlimit;
int X=0,Xlimit;

double Fi[Rmax][Xmax];

%}
%option noyywrap
S [\+\-]?
N [0-9]+
%%
{S}{N}(\.{N})?		{
	item++;
	if (item==1) { Rlimit=atoi(yytext); cout << "R limit:\t" << Rlimit <<"\n"; }
	if (item==2) { Xlimit=atoi(yytext); cout << "X limit:\t" << Xlimit <<"\n"; 
		X=R=0; assert(Rlimit<Rmax); assert(Xlimit<Xmax);
	cout << "\nFi[] phield data:"; }
	if (item>2) { Fi[R][X++] = atof(yytext); }
	}

[\r\n]+		{ if (item>2) { X=0; R++; } }

<<EOF>> {
	for (int r=0;r<=Rlimit;r++) {
		cout << "\n\n" << r <<": ";
		for (int x=0;x<Xlimit;x++) {
			cout << Fi[r][x] << " ";
	}}
	yyterminate();
}

.	{}
%%
